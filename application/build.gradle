buildscript {
	ext { 
	}
	repositories {
		mavenCentral()
	}
	dependencies { 
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

group = 'cf.dbaltor'

apply plugin: "org.springframework.boot"
apply plugin: 'io.spring.dependency-management'

application {
    mainClassName = 'library.LibraryApplication'
}

applicationDefaultJvmArgs = ["--enable-preview"]

sourceCompatibility = 17
targetCompatibility = 17

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// Classic Kubernetes client
	// implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client-all'
	// Fabric8 Kubernetes client
	implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-fabric8-all'
	implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'io.github.openfeign:feign-okhttp'
	implementation "io.github.resilience4j:resilience4j-spring-boot2"

	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.github.javafaker:javafaker:1.0.1'

	test {
  		useJUnitPlatform()
	}

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}


